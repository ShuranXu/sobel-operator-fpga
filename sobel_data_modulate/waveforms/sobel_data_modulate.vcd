$date
	Fri Mar 14 07:49:49 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module sobel_data_modulate_tb $end
$var wire 1 ! done_o $end
$var wire 8 " d8_o [7:0] $end
$var wire 8 # d7_o [7:0] $end
$var wire 8 $ d6_o [7:0] $end
$var wire 8 % d5_o [7:0] $end
$var wire 8 & d4_o [7:0] $end
$var wire 8 ' d3_o [7:0] $end
$var wire 8 ( d2_o [7:0] $end
$var wire 8 ) d1_o [7:0] $end
$var wire 8 * d0_o [7:0] $end
$var reg 1 + clk $end
$var reg 8 , d0_i [7:0] $end
$var reg 8 - d1_i [7:0] $end
$var reg 8 . d2_i [7:0] $end
$var reg 1 / done_i $end
$var reg 1 0 rst $end
$var integer 32 1 i [31:0] $end
$scope module SOBEL_DATA_MODULATE $end
$var wire 1 + clk $end
$var wire 8 2 d0_i [7:0] $end
$var wire 8 3 d1_i [7:0] $end
$var wire 8 4 d2_i [7:0] $end
$var wire 1 / done_i $end
$var wire 1 0 rst $end
$var wire 1 ! done_o $end
$var parameter 32 5 COLS $end
$var parameter 32 6 ROWS $end
$var reg 8 7 d0_o [7:0] $end
$var reg 8 8 d1_o [7:0] $end
$var reg 8 9 d2_o [7:0] $end
$var reg 8 : d3_o [7:0] $end
$var reg 8 ; d4_o [7:0] $end
$var reg 8 < d5_o [7:0] $end
$var reg 8 = d6_o [7:0] $end
$var reg 8 > d7_o [7:0] $end
$var reg 8 ? d8_o [7:0] $end
$var reg 8 @ data0 [7:0] $end
$var reg 8 A data1 [7:0] $end
$var reg 8 B data2 [7:0] $end
$var reg 8 C data3 [7:0] $end
$var reg 8 D data4 [7:0] $end
$var reg 8 E data5 [7:0] $end
$var reg 8 F data6 [7:0] $end
$var reg 8 G data7 [7:0] $end
$var reg 8 H data8 [7:0] $end
$var reg 10 I iCols [9:0] $end
$var reg 8 J iCounter [7:0] $end
$var reg 10 K iRows [9:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b101 6
b110 5
$end
#0
$dumpvars
b0 K
b0 J
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 4
b0 3
b0 2
bx 1
10
0/
b0 .
b0 -
b0 ,
1+
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
b0 "
0!
$end
#5
0+
#10
b1 H
b10 E
b11 B
b1 J
1+
b11 .
b11 4
b10 -
b10 3
b1 ,
b1 2
b1 1
1/
00
#15
0+
#20
b10 "
b10 ?
b1 #
b1 >
b11 %
b11 <
b10 &
b10 ;
1!
b10 J
b10 H
b1 G
b11 E
b10 D
b100 B
b11 A
1+
b100 .
b100 4
b11 -
b11 3
b10 ,
b10 2
b10 1
#25
0+
#30
b11 "
b11 ?
b10 #
b10 >
b1 $
b1 =
b100 %
b100 <
b11 &
b11 ;
b10 '
b10 :
b11 H
b10 G
b1 F
b100 E
b11 D
b10 C
b101 B
b100 A
b11 @
b1 I
1+
b101 .
b101 4
b100 -
b100 3
b11 ,
b11 2
b11 1
#35
0+
#40
b100 "
b100 ?
b11 #
b11 >
b10 $
b10 =
b101 %
b101 <
b100 &
b100 ;
b11 '
b11 :
b10 I
b100 H
b11 G
b10 F
b101 E
b100 D
b11 C
b110 B
b101 A
b100 @
1+
b110 .
b110 4
b101 -
b101 3
b100 ,
b100 2
b100 1
#45
0+
#50
b101 "
b101 ?
b100 #
b100 >
b11 $
b11 =
b110 %
b110 <
b101 &
b101 ;
b100 '
b100 :
b101 H
b100 G
b11 F
b110 E
b101 D
b100 C
b111 B
b110 A
b101 @
b11 I
1+
b111 .
b111 4
b110 -
b110 3
b101 ,
b101 2
b101 1
#55
0+
#60
b110 "
b110 ?
b101 #
b101 >
b100 $
b100 =
b111 %
b111 <
b110 &
b110 ;
b101 '
b101 :
b100 I
b110 H
b101 G
b100 F
b111 E
b110 D
b101 C
b1000 B
b111 A
b110 @
1+
b1000 .
b1000 4
b111 -
b111 3
b110 ,
b110 2
b110 1
#65
0+
#70
b0 "
b0 ?
b110 #
b110 >
b101 $
b101 =
b0 %
b0 <
b111 &
b111 ;
b110 '
b110 :
b111 H
b110 G
b101 F
b1000 E
b111 D
b110 C
b1001 B
b1000 A
b111 @
b101 I
1+
b1001 .
b1001 4
b1000 -
b1000 3
b111 ,
b111 2
b111 1
#75
0+
#80
b1000 "
b1000 ?
b111 #
b111 >
b0 $
b0 =
b1001 %
b1001 <
b1000 &
b1000 ;
b0 '
b0 :
b1010 (
b1010 9
b1001 )
b1001 8
b1 K
b0 I
b1000 H
b111 G
b110 F
b1001 E
b1000 D
b111 C
b1010 B
b1001 A
b1000 @
1+
b1010 .
b1010 4
b1001 -
b1001 3
b1000 ,
b1000 2
b1000 1
#85
0+
#90
b1001 "
b1001 ?
b1000 #
b1000 >
b111 $
b111 =
b1010 %
b1010 <
b1001 &
b1001 ;
b1000 '
b1000 :
b1011 (
b1011 9
b1010 )
b1010 8
b1001 *
b1001 7
b1001 H
b1000 G
b111 F
b1010 E
b1001 D
b1000 C
b1011 B
b1010 A
b1001 @
b1 I
1+
b1011 .
b1011 4
b1010 -
b1010 3
b1001 ,
b1001 2
b1001 1
#95
0+
#100
b1010 "
b1010 ?
b1001 #
b1001 >
b1000 $
b1000 =
b1011 %
b1011 <
b1010 &
b1010 ;
b1001 '
b1001 :
b1100 (
b1100 9
b1011 )
b1011 8
b1010 *
b1010 7
b10 I
b1010 H
b1001 G
b1000 F
b1011 E
b1010 D
b1001 C
b1100 B
b1011 A
b1010 @
1+
b1100 .
b1100 4
b1011 -
b1011 3
b1010 ,
b1010 2
b1010 1
#105
0+
#110
b1011 "
b1011 ?
b1010 #
b1010 >
b1001 $
b1001 =
b1100 %
b1100 <
b1011 &
b1011 ;
b1010 '
b1010 :
b1101 (
b1101 9
b1100 )
b1100 8
b1011 *
b1011 7
b1011 H
b1010 G
b1001 F
b1100 E
b1011 D
b1010 C
b1101 B
b1100 A
b1011 @
b11 I
1+
b1101 .
b1101 4
b1100 -
b1100 3
b1011 ,
b1011 2
b1011 1
#115
0+
#120
b1100 "
b1100 ?
b1011 #
b1011 >
b1010 $
b1010 =
b1101 %
b1101 <
b1100 &
b1100 ;
b1011 '
b1011 :
b1110 (
b1110 9
b1101 )
b1101 8
b1100 *
b1100 7
b100 I
b1100 H
b1011 G
b1010 F
b1101 E
b1100 D
b1011 C
b1110 B
b1101 A
b1100 @
1+
b1110 .
b1110 4
b1101 -
b1101 3
b1100 ,
b1100 2
b1100 1
#125
0+
#130
b0 "
b0 ?
b1100 #
b1100 >
b1011 $
b1011 =
b0 %
b0 <
b1101 &
b1101 ;
b1100 '
b1100 :
b0 (
b0 9
b1110 )
b1110 8
b1101 *
b1101 7
b1101 H
b1100 G
b1011 F
b1110 E
b1101 D
b1100 C
b1111 B
b1110 A
b1101 @
b101 I
1+
b1111 .
b1111 4
b1110 -
b1110 3
b1101 ,
b1101 2
b1101 1
#135
0+
#140
b1110 "
b1110 ?
b1101 #
b1101 >
b0 $
b0 =
b1111 %
b1111 <
b1110 &
b1110 ;
b0 '
b0 :
b10000 (
b10000 9
b1111 )
b1111 8
b0 *
b0 7
b10 K
b0 I
b1110 H
b1101 G
b1100 F
b1111 E
b1110 D
b1101 C
b10000 B
b1111 A
b1110 @
1+
b10000 .
b10000 4
b1111 -
b1111 3
b1110 ,
b1110 2
b1110 1
#145
0+
#150
b1111 "
b1111 ?
b1110 #
b1110 >
b1101 $
b1101 =
b10000 %
b10000 <
b1111 &
b1111 ;
b1110 '
b1110 :
b10001 (
b10001 9
b10000 )
b10000 8
b1111 *
b1111 7
b1111 H
b1110 G
b1101 F
b10000 E
b1111 D
b1110 C
b10001 B
b10000 A
b1111 @
b1 I
1+
b10001 .
b10001 4
b10000 -
b10000 3
b1111 ,
b1111 2
b1111 1
#155
0+
#160
b10000 "
b10000 ?
b1111 #
b1111 >
b1110 $
b1110 =
b10001 %
b10001 <
b10000 &
b10000 ;
b1111 '
b1111 :
b10010 (
b10010 9
b10001 )
b10001 8
b10000 *
b10000 7
b10 I
b10000 H
b1111 G
b1110 F
b10001 E
b10000 D
b1111 C
b10010 B
b10001 A
b10000 @
1+
b10010 .
b10010 4
b10001 -
b10001 3
b10000 ,
b10000 2
b10000 1
#165
0+
#170
b10001 "
b10001 ?
b10000 #
b10000 >
b1111 $
b1111 =
b10010 %
b10010 <
b10001 &
b10001 ;
b10000 '
b10000 :
b10011 (
b10011 9
b10010 )
b10010 8
b10001 *
b10001 7
b10001 H
b10000 G
b1111 F
b10010 E
b10001 D
b10000 C
b10011 B
b10010 A
b10001 @
b11 I
1+
b10011 .
b10011 4
b10010 -
b10010 3
b10001 ,
b10001 2
b10001 1
#175
0+
#180
b10010 "
b10010 ?
b10001 #
b10001 >
b10000 $
b10000 =
b10011 %
b10011 <
b10010 &
b10010 ;
b10001 '
b10001 :
b10100 (
b10100 9
b10011 )
b10011 8
b10010 *
b10010 7
b100 I
b10010 H
b10001 G
b10000 F
b10011 E
b10010 D
b10001 C
b10100 B
b10011 A
b10010 @
1+
b10100 .
b10100 4
b10011 -
b10011 3
b10010 ,
b10010 2
b10010 1
#185
0+
#190
b0 "
b0 ?
b10010 #
b10010 >
b10001 $
b10001 =
b0 %
b0 <
b10011 &
b10011 ;
b10010 '
b10010 :
b0 (
b0 9
b10100 )
b10100 8
b10011 *
b10011 7
b10011 H
b10010 G
b10001 F
b10100 E
b10011 D
b10010 C
b10101 B
b10100 A
b10011 @
b101 I
1+
b10101 .
b10101 4
b10100 -
b10100 3
b10011 ,
b10011 2
b10011 1
#195
0+
#200
b10100 "
b10100 ?
b10011 #
b10011 >
b0 $
b0 =
b10101 %
b10101 <
b10100 &
b10100 ;
b0 '
b0 :
b10110 (
b10110 9
b10101 )
b10101 8
b0 *
b0 7
b11 K
b0 I
b10100 H
b10011 G
b10010 F
b10101 E
b10100 D
b10011 C
b10110 B
b10101 A
b10100 @
1+
b10110 .
b10110 4
b10101 -
b10101 3
b10100 ,
b10100 2
b10100 1
#205
0+
#210
b10101 "
b10101 ?
b10100 #
b10100 >
b10011 $
b10011 =
b10110 %
b10110 <
b10101 &
b10101 ;
b10100 '
b10100 :
b10111 (
b10111 9
b10110 )
b10110 8
b10101 *
b10101 7
b10101 H
b10100 G
b10011 F
b10110 E
b10101 D
b10100 C
b10111 B
b10110 A
b10101 @
b1 I
1+
b10111 .
b10111 4
b10110 -
b10110 3
b10101 ,
b10101 2
b10101 1
#215
0+
#220
b10110 "
b10110 ?
b10101 #
b10101 >
b10100 $
b10100 =
b10111 %
b10111 <
b10110 &
b10110 ;
b10101 '
b10101 :
b11000 (
b11000 9
b10111 )
b10111 8
b10110 *
b10110 7
b10 I
b10110 H
b10101 G
b10100 F
b10111 E
b10110 D
b10101 C
b11000 B
b10111 A
b10110 @
1+
b11000 .
b11000 4
b10111 -
b10111 3
b10110 ,
b10110 2
b10110 1
#225
0+
#230
b10111 "
b10111 ?
b10110 #
b10110 >
b10101 $
b10101 =
b11000 %
b11000 <
b10111 &
b10111 ;
b10110 '
b10110 :
b11001 (
b11001 9
b11000 )
b11000 8
b10111 *
b10111 7
b10111 H
b10110 G
b10101 F
b11000 E
b10111 D
b10110 C
b11001 B
b11000 A
b10111 @
b11 I
1+
b11001 .
b11001 4
b11000 -
b11000 3
b10111 ,
b10111 2
b10111 1
#235
0+
#240
b11000 "
b11000 ?
b10111 #
b10111 >
b10110 $
b10110 =
b11001 %
b11001 <
b11000 &
b11000 ;
b10111 '
b10111 :
b11010 (
b11010 9
b11001 )
b11001 8
b11000 *
b11000 7
b100 I
b11000 H
b10111 G
b10110 F
b11001 E
b11000 D
b10111 C
b11010 B
b11001 A
b11000 @
1+
b11010 .
b11010 4
b11001 -
b11001 3
b11000 ,
b11000 2
b11000 1
#245
0+
#250
b0 "
b0 ?
b11000 #
b11000 >
b10111 $
b10111 =
b0 %
b0 <
b11001 &
b11001 ;
b11000 '
b11000 :
b0 (
b0 9
b11010 )
b11010 8
b11001 *
b11001 7
b11001 H
b11000 G
b10111 F
b11010 E
b11001 D
b11000 C
b11011 B
b11010 A
b11001 @
b101 I
1+
b11011 .
b11011 4
b11010 -
b11010 3
b11001 ,
b11001 2
b11001 1
#255
0+
#260
b0 #
b0 >
b0 $
b0 =
b11011 %
b11011 <
b11010 &
b11010 ;
b0 '
b0 :
b11100 (
b11100 9
b11011 )
b11011 8
b0 *
b0 7
b100 K
b0 I
b11010 H
b11001 G
b11000 F
b11011 E
b11010 D
b11001 C
b11100 B
b11011 A
b11010 @
1+
b11100 .
b11100 4
b11011 -
b11011 3
b11010 ,
b11010 2
b11010 1
#265
0+
#270
b11100 %
b11100 <
b11011 &
b11011 ;
b11010 '
b11010 :
b11101 (
b11101 9
b11100 )
b11100 8
b11011 *
b11011 7
b11011 H
b11010 G
b11001 F
b11100 E
b11011 D
b11010 C
b11101 B
b11100 A
b11011 @
b1 I
1+
b11101 .
b11101 4
b11100 -
b11100 3
b11011 ,
b11011 2
b11011 1
#275
0+
#280
b11101 %
b11101 <
b11100 &
b11100 ;
b11011 '
b11011 :
b11110 (
b11110 9
b11101 )
b11101 8
b11100 *
b11100 7
b10 I
b11100 H
b11011 G
b11010 F
b11101 E
b11100 D
b11011 C
b11110 B
b11101 A
b11100 @
1+
b11110 .
b11110 4
b11101 -
b11101 3
b11100 ,
b11100 2
b11100 1
#285
0+
#290
b11110 %
b11110 <
b11101 &
b11101 ;
b11100 '
b11100 :
b11111 (
b11111 9
b11110 )
b11110 8
b11101 *
b11101 7
b11101 H
b11100 G
b11011 F
b11110 E
b11101 D
b11100 C
b11111 B
b11110 A
b11101 @
b11 I
1+
b11111 .
b11111 4
b11110 -
b11110 3
b11101 ,
b11101 2
b11101 1
#295
0+
#300
b11111 %
b11111 <
b11110 &
b11110 ;
b11101 '
b11101 :
b100000 (
b100000 9
b11111 )
b11111 8
b11110 *
b11110 7
b100 I
b11110 H
b11101 G
b11100 F
b11111 E
b11110 D
b11101 C
b100000 B
b11111 A
b11110 @
1+
b100000 .
b100000 4
b11111 -
b11111 3
b11110 ,
b11110 2
b11110 1
#305
0+
#310
